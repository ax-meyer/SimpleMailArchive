@page "/"
@page "/browse"
@using SimpleMailArchiver.Data
@using Radzen.Blazor

<PageTitle>Mail Archive</PageTitle>
@inject ArchiveContext DbContext;

<h1>Mail Archive</h1>

<RadzenDataGrid AllowPaging="@true" AllowSorting="@true" AllowFiltering="@true" Data="@Messages">
    <Columns>
        <RadzenDataGridColumn TItem="@MailMessage" Context="data" Property="@nameof(MailMessage.Sender)" Title="Sender" />
        <RadzenDataGridColumn TItem="@MailMessage" Context="data" Property="@nameof(MailMessage.Recipient)" Title="Recipient" />
            
    </Columns>
</RadzenDataGrid>

@if (_showMessage)
{
    <DisplayMail Message="@_selectedMessage" OnClose="@DisplayMailClosing" />
}

@code {
    public IQueryable<MailMessage> Messages { get; set; } = null!;
    private bool _showMessage;

    private MailMessage? _selectedMessage;
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        Messages = DbContext.MailMessages;
        var tstMEsages = Messages.ToList();
    }

    private void DisplayMessage(MailMessage message)
    {
        _selectedMessage = message ?? throw new ArgumentNullException(nameof(message));
        _showMessage = true;
    }

    private void DisplayMailClosing() => _showMessage = false;
}
