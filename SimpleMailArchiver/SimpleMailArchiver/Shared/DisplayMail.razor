@using System.Text.Json
@using SimpleMailArchiver.Data
@using SimpleMailArchiver.Services
@inject FileDownloadHelperContext DownloadHelperContext;
@inject IJSRuntime JsRuntime;

<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);"
     aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Message.Subject</h4>
                <button type="button" class="close" @onclick="Download">Download</button>
                <button type="button" class="close" @onclick="ModalCancel">Close</button>
            </div>
            <div class="modal-body">
                <table class="table-responsive">
                    <tr>
                        <td>From</td>
                        <td>@Message.Sender</td>
                    </tr>
                    <tr>
                        <td>To</td>
                        <td>@Message.Recipient</td>
                    </tr>
                    @if (Message.CcRecipient?.Trim() != string.Empty)
                    {
                        <tr>
                            <td>CC</td>
                            <td>@Message.CcRecipient</td>
                        </tr>
                    }
                    @if (Message.BccRecipient?.Trim() != string.Empty)
                    {
                        <tr>
                            <td>BCC</td>
                            <td>@Message.BccRecipient</td>
                        </tr>
                    }
                    @if (Message.Attachments?.Trim() != "[]")
                    {
                        <tr>
                            <td>Attachments:</td>
                            <td>
                                @foreach (var attachment in JsonSerializer.Deserialize<List<string>>(Message.Attachments!)!)
                                {
                                    @attachment <br />
                                }
                            </td>
                        </tr>
                    }
                </table>
                <br /><br />
                @((MarkupString)Message.HtmlBody)
                @((MarkupString)Message.TextBody.Replace("\r\n", "<br/>").Replace("\n\r", "<br/>").Replace("\r", "<br/>").Replace("\n", "<br/>"))
            </div>
        </div>
    </div>
</div>

@code{
    [Parameter]
    public required MailMessage Message { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }
    private Task ModalCancel() => OnClose.InvokeAsync(false);

    private async Task Download()
    {
        await DownloadHelperContext.PrepareMessageForDownload(Message, CancellationToken.None);
        await JsRuntime.InvokeAsync<object>("open", "download", "_blank");
    }

    protected override void OnInitialized()
    {
    }
}